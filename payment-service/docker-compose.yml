version: '3.8'

networks:
  payment-network:
    driver: bridge

services:
  postgres:
    container_name: postgres
#    image: postgres:latest
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: guru
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/guru
    networks:
      - payment-network
    restart: unless-stopped



  rabbitmq:
#    image: rabbitmq:3-management
    image: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - payment-network


  springapipayment:
    build: .
    image: springapipayment
    container_name: payment-app
    ports:
      - "8888:8888"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/guru
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
#      - SPRING_REDIS_HOST=redis
#      - SPRING_REDIS_PORT=6379
    networks:
      - payment-network
    depends_on:
      - postgres
      - rabbitmq

#      - redis
#      - kafka


#  redis:
#    image: redis
#    container_name: redis
#    ports:
#      - "6379:6379"
##    command: redis-server --bind 0.0.0.0
#    networks:
#      - payment-network


#  kafka:
#    image: bitnami/kafka:latest
#    container_name: kafka
#    ports:
#      - "9098:9098"
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      ALLOW_PLAINTEXT_LISTENER: "yes"
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9098
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9098
#
#  zookeeper:
#    image: bitnami/zookeeper:latest
#    container_name: zookeeper
#    ports:
#      - "21888:21888"
#    environment:
#      ALLOW_ANONYMOUS_LOGIN: "yes"

